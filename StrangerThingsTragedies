-- This file was generated using Luraph Obfuscator v13.5.4

return(function(OS,jS,AS,LS,xS,SS,sS,bS,yS,JS,QS,rS,gS,dS,aS,RS,nS,DS,US,qS,iS,CS,wS,cS,kS,IS,YS,HS,mS,tS,MS,ZS,lS,GS,FS,pS,oS,hS,KS,...)local u,E=nil,nil;for xF=0X00,0X1 do if xF==0x0 then u=iS;else do E=yS;end;end;end;local PS,G=nil,nil;local TS=(0X0);local X=(string.sub);local v=tostring;do repeat if TS==0 then PS={};TS=0X1;else G=2^0x0034;TS=0x2;end;until TS==0X2;end;local y,P,L=nil,nil,nil;local N,m=string.char,{[0X0]={[0]=0,1,2,3,0X04,5,0X00006,7,0x8,9,0xA,11,12,0xD,14,15},{[0]=1,0X000,0x0003,0X2,gS,4,0X7,0X06,0X00009,0X008,11,10,13,0Xc,0x00f,0x0E},{[0]=0X002,0X3,US,0x1,0X06,0x0007,4,0X5,0X0000A,rS,8,sS,0X00e,0xF,0X000c,0xD},{[0x000]=0x00003,0X2,0x1,0,0x7,6,0X5,4,0x0b,0X000a,9,8,15,0X000E,13,0Xc},{[0]=DS,5,6,0X0007,0X0,oS,2,3,12,0XD,14,0XF,8,9,0X00A,11},{[0x0]=0X5,0X0004,hS,6,1,0X000,0X03,2,0Xd,12,15,0X0000e,0X00009,8,11,10},{[0]=6,0X0007,0X004,gS,0x2,0x3,0X0000,0X1,0x0000E,0x000f,12,13,10,0Xb,8,0x009},{[US]=7,6,5,0x04,3,0X0002,0X00001,0X0,15,14,0xD,12,11,0X000A,sS,8},{[0X0]=8,9,0X0000a,11,12,13,14,LS,0X00000,1,2,0X3,0X4,0X5,0X6,7},{[0]=0X00009,8,11,0X000A,0X000D,IS,0X0F,14,1,0x0,0X3,2,0X5,4,0X7,0X6},{[0X0]=0xA,0X000b,8,sS,14,0XF,12,0Xd,0X00002,3,0,1,6,7,0x4,5},{[0x0]=11,0XA,9,8,15,14,13,12,3,2,0X1,0X0,7,aS,0X5,0X4},{[US]=0XC,0Xd,0Xe,15,8,0X00009,0X00A,0xb,4,5,0X00006,7,0X0,1,0X2,3},{[0X0]=13,IS,0Xf,0Xe,0X09,0x8,11,10,gS,4,0x7,0X6,0X1,0,3,0X00002},{[0X00000]=14,15,0X0C,13,0x00a,rS,8,0x9,0X0006,0X7,0X0004,0x0005,0X2,cS,0,1},{[0]=0Xf,14,KS,12,rS,0XA,0x00009,8,0X7,6,5,DS,0X3,2,0X0001,0x0}};for pv=0X000,0X00002 do do if pv<=0X00000 then y=FS.gsub;elseif pv==1 then P=lS;else L=coroutine.yield;end;end;end;local A=(0X100000000);do TS=2;end;local z,o,r=nil,nil,nil;while TS<3 do if TS<=0X00000 then do o=pS;end;TS=1;else if TS==0x01 then do r=xS;end;TS=0X3;else do z=dS;end;TS=0;end;end;end;local h,I=QS,unpack or AS.unpack;local D=rawset;TS=0x1;local i,c=nil,(nil);repeat if TS<=0X0 then do c=JS;end;do break;end;else if TS~=0X0001 then i=GS;do TS=0;end;else TS=2;end;end;until false;do TS=0X0;end;local F,g=nil,nil;repeat if TS==0 then do F=1;end;TS=0X1;else g=YS;TS=2;end;until TS==0X2;local K=(c and c()or HS);local VS=({});local W=tonumber;TS=1;local l,d=nil,nil;repeat if TS<=0x0 then do TS=0X2;end;elseif TS~=0x001 then do l=y(X(l,5),'\046\046',function(B9)if z(B9,0x2)~=72 then local kr=(nil);local Br=0;while Br<0X2 do if Br~=0X0 then if d then local p3=(nil);local g3=0;repeat if not(g3<=0X00000)then if g3==1 then return p3;else d=MS;do g3=1;end;end;else p3=i(kr,d);do g3=0x2;end;end;until(false);else return kr;end;Br=2;else kr=N(W(B9,0X10));Br=1;end;end;else do d=W(X(B9,1,1));end;return"";end;end);end;TS=0x3;else lend;until TS>2;TS=0X3;local p,Q,U,Y,J,x,H,b=nil,nil,nil,nil,nil,nil,nil,nil;repeat if TS<=3 then if TS<=0X1 then do if TS~=0X0000 then H={[0]=1};TS=6;else do Y=Q-0X1;end;TS=0x7;end;end;else do if TS==0X2 then U=AS.insert;TS=0;else p=function()local DC=1;local iC=nil;repeat if DC==0 then F=F+0X1;DC=2;else iC=z(l,F,F);DC=0X0;end;until DC>0X1;return iC;end;TS=4;end;end;end;else do if TS<=0x0005 then do if TS~=0X004 then do x=function()local zA,VA,dA,xA=z(l,F,F+3);local hA=(0);while(true)do if hA==0X0 then F=F+0X00004;hA=0X1;else do return xA*16777216+dA*65536+VA*256+zA;end;end;end;end;end;TS=1;else Q=0X00080000000;TS=0X02;end;end;else if TS~=6 then J=A-0X1;TS=5;else b=function()local q5=(2);local z5,p5=nil,nil;while(true)do if q5<=0 then return p5*A+z5;else if q5==0X1 then if not(p5>=Q)then else p5=p5-A;end;do q5=0;end;else z5,p5=x(),x();do q5=0x001;end;end;end;end;end;TS=0X008;end;end;end;end;until TS>=0X08;local f=assert;TS=0x3;local s,M,R=nil,nil,nil;while'*\113{'do if TS<=0x00001 then if TS~=0 then R=function()local Xe=x();local Re=(x());local xe,Ze,Ie=2,nil,nil;while(true)do do if xe<=0x0 then Ze=(-0x1)^M(Re,0X0001f,0x1);xe=0X1;else if xe==1 then Ie=0X1;break;else if Xe==0 and Re==0 then return 0;end;xe=0X00;end;end;end;end;local Oe=M(Re,mS,rS);xe=2;local Se=nil;repeat if xe<=0 then if Oe==0X0 then if Se==0 then return Ze*0;else local pe=(1);while pe~=2 do if pe==0x0 then Ie=0X00000;pe=2;else Oe=oS;pe=0;end;end;end;elseif Oe==0X7Ff then do if Se~=0X0 then return Ze*(oS/0);else return Ze*(US/0X00);end;end;end;xe=1;else if xe~=0X1 then Se=M(Re,0,0X00014)*A+Xe;do xe=0;end;else return Ze*(2^(Oe-wS))*(Se/G+Ie);end;end;until(false);end;do break;end;else M=function(iX,tX,JX)local YX=((iX/H[tX])%H[JX]);YX=YX-YX%1;return YX;end;do TS=1;end;end;elseif TS~=2 then do local H1=nS;for vZ=0x1,bS do H[vZ]=H1;H1=H1*nS;end;end;TS=0x2;else s=RS;TS=0X00000;end;end;local w=(bit or bit32);do TS=1;end;local q,S=nil,(nil);do repeat if TS~=0 then do q=w and w[qS]or function(Eo,bo)Eo=Eo%A;local zo,mo,ko=0X02,nil,nil;repeat do if not(zo<=0X0)then if zo==0X1 then mo=0X1;do zo=0x0;end;else bo=bo%A;zo=0X1;end;else ko=US;zo=0x003;end;end;until zo>=0X3;do zo=0;end;repeat if zo~=0 then return ko+Eo*mo+bo*mo;else do while Eo>0X0 and bo>0 do local sa=(Eo%0X10);local Ba=bo%16;for CV=0,2 do if CV<=0X0 then ko=ko+m[sa][Ba]*mo;else if CV==0X1 then Eo=(Eo-sa)/16;else bo=(bo-Ba)/0x10;end;end;end;mo=mo*16;end;end;zo=1;end;until false;end;end;do TS=0;end;else do S=w and w.band or function(nW,kW)nW=nW%A;kW=kW%A;return((nW+kW)-q(nW,kW))/0X2;end;end;break;end;until false;end;local V=error;local a=SS;local k=w and w.bor or function(uz,vz)do for rk=0,0X1 do do if rk~=0X0 then vz=vz%A;else do uz=uz%A;end;end;end;end;end;return J-S(J-uz,J-vz);end;local Z,j,t=w and w[kS]or function(eQ)return J-(eQ%A);end,w and w[ZS],nil;for aI=0X00,1 do if aI~=0X0 then j=j or function(vo,po)local Co=(0);repeat if not(Co<=0)then if Co==0x1 then if po<0x00 then return t(vo,-po);end;Co=0X2;else return(vo*H[po])%A;end;else if not(po>=32)then else return 0X0;end;Co=1;end;until(false);end;else do t=w and w.rshift;end;end;end;t=t or function(GN,AN)local YN,BN=1,(nil);repeat do if YN<=0 then BN=(GN%A/H[AN]);YN=0X3;else if YN==1 then if not(AN>=32)then else return 0X0;end;YN=0x002;else if AN<0X0 then return j(GN,-AN);end;YN=0;end;end;end;until YN==0X3;return BN-BN%1;end;local T=function()local e7=(0X0);local D7=0;while-0X170bE803 do local MH=z(l,F,F);F=F+0X1;D7=k(D7,j(S(MH,127),e7));if S(MH,128)~=0 then else do return D7;end;end;e7=e7+7;end;end;local O=({[0X9]=0x9,[gS]=6,[0X3]=0X4,[8]=0x2,[0X0001]=cS,[0X0008]=6,[2]=0x7,[0X9]=0X0});TS=0;local C,e=nil,(nil);while TS<0X02 do if TS==0 then C={2,3,5};TS=0X1;else e=function()local Zl=T();local Ul=0X00;repeat if Ul==0 then do if not(Zl>Y)then else do return Zl-A;end;end;end;Ul=1;else return Zl;end;until false;end;TS=0X0002;end;end;local B=p();local fS=p();TS=1;local uS,ES,vS,WS,XS,zS,NS=nil,nil,nil,nil,nil,nil,nil;while"\053!\121H\098'\089\085e"do if TS<=4 then do if not(TS<=0x01)then if TS<=2 then(VS)[4]=PS;TS=0X6;else if TS==3 then do vS=1;end;TS=0;else function XS(ZQ,IQ,OQ)local AQ=ZQ[0x2];local lQ,UQ=ZQ[0X0001],ZQ[3];local tQ,jQ,wQ=ZQ[5],ZQ[9],ZQ[0X8];local eQ=ZQ[0X007];local vQ=ZQ[0x6];local fQ=r({},{__mode="v"});local CQ=(nil);CQ=function(...)local hW=1;local GW=((c and c()or _ENV));local jW,QW=(GW==K and IQ or GW),{};local BW,lW=ES(...);BW=BW-0X0001;for wc=0X0000,BW do if not(eQ>wc)then break;else(QW)[wc]=lW[wc+0x0001];end;end;VS[1]=ZQ;do VS[2]=QW;end;if not jQ then lW=nil;elseif wQ then do QW[eQ]={n=BW>=eQ and BW-eQ+0x1 or 0,I(lW,eQ+1,BW+0X00001)};end;end;local eW=(0X0);do if jW~=GW then if not(a)then do _ENV=jW;end;else(a)(CQ,jW);end;end;end;local RW,DW,EW,NW=E(function()do while true do local XC=lQ[hW];local xC=(XC[0X1]);hW=hW+1;if xC>=0X02F then if not(xC<0X047)then if not(xC<83)then if xC>=89 then if xC>=92 then if xC<0X0005D then QW[XC[3]]=jW[XC[7]];else if xC~=0X05e then local nT=(XC[0x003]);local TT,YT=QW[nT]();if not(TT)then else do for lX=0x1,XC[5]do QW[nT+lX]=YT[lX];end;end;hW=XC[0X2];end;else do if QW[XC[2]]~=QW[XC[5]]then else hW=XC[3];end;end;end;end;else if xC<0X5a then do QW[XC[3]]=QW[XC[0X2]]==QW[XC[0X5]];end;else do if xC==91 then if not(not(QW[XC[2]]<=XC[0x006]))then else hW=XC[0X3];end;else QW[XC[0x00003]]=true;end;end;end;end;else if not(xC>=0X0056)then if xC>=0X000054 then if xC==85 then do(QW[XC[3]])[XC[0X007]]=QW[XC[0x5]];end;else(QW)[XC[0x3]]=false;end;else local xh=XC[3];QW[xh](QW[xh+0x1]);eW=xh-0x01;end;else if not(xC>=87)then(VS)[XC[0x002]]=QW[XC[3]];else if xC~=0X58 then QW[XC[0x00003]]=QW[XC[0x00002]][XC[6]];else(QW)[XC[3]]=not QW[XC[0x2]];end;end;end;end;else do if xC>=0X00004d then if not(xC<80)then if xC<0X051 then(QW[XC[3]])[QW[XC[2]]]=XC[6];else if xC==82 then do(QW)[XC[3]]=QW[XC[2]]~=XC[0X6];end;else if XC[0X5]~=0X57 then(QW)[XC[0X3]]=nil;else hW=hW-1;(lQ)[hW]={[0X003]=(XC[0x3]-149),[1]=0x12,[2]=(XC[2]-0x95)};end;end;end;else if not(xC>=78)then local nq=XC[2];local Wq=(QW[nq]);for uc=nq+1,XC[5]do Wq=Wq..QW[uc];end;(QW)[XC[0X3]]=Wq;else if xC==0X00004f then if QW[XC[2]]~=QW[XC[5]]then hW=XC[0X3];end;else(QW)[XC[0X3]]=QW[XC[0x002]]>=QW[XC[5]];end;end;end;else if not(xC>=0X4A)then if not(xC>=72)then eW=XC[3];QW[eW]=QW[eW]();else if xC~=0X49 then if XC[5]==0X000Ef then hW=hW-1;do lQ[hW]={[0x00002]=(XC[0x002]-89),[1]=0X17,[3]=(XC[3]-89)};end;elseif XC[5]==0X4 then hW=hW-1;lQ[hW]={[0x0002]=(XC[2]-20),[0X03]=(XC[3]-0X00014),[1]=0X051};else do for Dp=XC[0X03],XC[0X2]do(QW)[Dp]=nil;end;end;end;else if not(QW[XC[2]]<QW[XC[0X5]])then else hW=XC[0x00003];end;end;end;else if not(xC<75)then do if xC==0X004c then(QW)[XC[3]]=VS[XC[2]];else local Y2=(XC[0X3]);(QW)[Y2]=QW[Y2](I(QW,Y2+0X1,eW));eW=Y2;end;end;else do QW[XC[3]]={};end;end;end;end;end;end;else if xC<0X00003b then if not(xC>=53)then if xC<50 then if xC>=48 then if xC~=49 then QW[XC[3]]=QW[XC[0x2]]~=QW[XC[5]];else do if not(QW[XC[2]]<QW[XC[5]])then hW=XC[0X03];end;end;end;else(QW)[XC[3]]=#QW[XC[2]];end;else if xC>=0X0033 then if xC==0X34 then eW=XC[3];QW[eW]();eW=eW-0x1;else QW[XC[0X00003]]=QW[XC[0x2]]^QW[XC[5]];end;else do if XC[0X5]==0X0002E then hW=hW-1;do(lQ)[hW]={[1]=0X000B,[3]=(XC[0X3]-0X61),[2]=(XC[2]-97)};end;elseif XC[5]~=93 then if not(QW[XC[3]])then else do hW=XC[2];end;end;else hW=hW-0x1;(lQ)[hW]={[0X2]=(XC[2]-0XaD),[0X3]=(XC[0x3]-0Xad),[0X1]=0X017};end;end;end;end;else if xC>=0X38 then if xC>=0X39 then do if xC==0x003a then(QW)[XC[0X0003]]=XC[0X7];else do QW[XC[3]]=k(QW[XC[0X2]],QW[XC[0X05]]);end;end;end;else local rD=XC[0X3];eW=rD+XC[2]-0X0001;(QW)[rD]=QW[rD](I(QW,rD+1,eW));do eW=rD;end;end;else if not(xC>=54)then local e4=XC[0X00003];local j4,m4,g4=QW[e4]();do if not(j4)then else QW[e4+0X00001]=m4;QW[e4+0X0002]=g4;hW=XC[2];end;end;else do if xC~=0X37 then local KQ=XC[3];do for Pr=KQ,KQ+(XC[0X02]-0X001)do do(QW)[Pr]=lW[eQ+(Pr-KQ)+0X1];end;end;end;else local dp=XC[0x003];local Zp=(h(function(...)L();for dv,Kv in...do L(true,dv,Kv);end;end));(Zp)(QW[dp],QW[dp+0x001],QW[dp+2]);eW=dp;(QW)[dp]=Zp;do hW=XC[0X00002];end;end;end;end;end;end;else do if not(xC<65)then do if not(xC<68)then if xC<69 then if QW[XC[2]]==XC[6]then else hW=XC[0X03];end;else do if xC~=0X46 then repeat local QI,SI=fQ,(QW);if#QI>0X0 then local H2={};for xV,JV in o,QI do for Ge,se in o,JV do if not(se[1]==SI and se[2]>=0)then else local ft=(se[2]);if not H2[ft]then(H2)[ft]={SI[ft]};end;(se)[1]=H2[ft];(se)[0x2]=1;end;end;end;end;until true;return false,XC[3],eW;else(QW)[XC[0x3]]=QW[XC[2]]%XC[6];end;end;end;else if xC>=66 then do if xC==0X43 then local vT=(UQ[XC[0x2]]);local oT=(vT[0X4]);local XT,PT=#oT,nil;if not(XT>0)then else PT={};do for A9=1,XT do local w9=oT[A9];if w9[1]==0X0 then(PT)[A9-1]={QW,w9[0X2]};else(PT)[A9-1]=OQ[w9[0X2]];end;end;end;U(fQ,PT);end;(QW)[XC[0x3]]=XS(vT,jW,PT);else do QW[XC[3]]=Z(QW[XC[0X2]]);end;end;end;else do(QW)[XC[3]]=XC[0X7];end;end;end;end;else if xC<0x3e then if xC<0x00003c then(jW)[XC[0x7]]=QW[XC[3]];else if xC~=61 then QW[XC[3]]=j(QW[XC[2]],QW[XC[5]]);else QW[XC[0x03]]=t(QW[XC[0X2]],QW[XC[0X5]]);end;end;else if not(xC<63)then if xC~=64 then QW[XC[3]]=QW[XC[0x02]]*XC[6];else local GA=XC[0X00003];(QW[GA])(QW[GA+1],QW[GA+2]);do eW=GA-1;end;end;else if not(not(QW[XC[0X2]]<=QW[XC[5]]))then else hW=XC[0X03];end;end;end;end;end;end;end;else if not(xC<23)then if xC>=0X23 then if not(xC>=0x29)then if xC>=0X0026 then do if not(xC<39)then do if xC~=0X00028 then local C5=(XC[3]);local P5,s5=QW[C5]();do if not(P5)then else hW=XC[0X2];(QW)[C5+3]=s5;end;end;else(QW)[XC[0X0003]]=QW[XC[0x0002]][QW[XC[0X5]]];end;end;else local sv=XC[0X3];local uv=(h(function(...)L();for wn,Yn,Cn,Bn,fn,Jn,jn,hn,Zn,gn in...do(L)(true,{wn,Yn,Cn,Bn,fn,Jn,jn,hn,Zn,gn});end;end));(uv)(QW[sv],QW[sv+0X00001],QW[sv+0X2]);eW=sv;do(QW)[sv]=uv;end;hW=XC[2];end;end;else if not(xC>=36)then QW[XC[0X3]][QW[XC[2]]]=QW[XC[5]];else if xC==37 then local bv=(XC[0X3]);eW=bv+XC[2]-0X0001;QW[bv](I(QW,bv+0X1,eW));eW=bv-0x001;else local Ty=(XC[0X00003]);QW[Ty]=QW[Ty](QW[Ty+0X1],QW[Ty+2]);do eW=Ty;end;end;end;end;else do if xC>=0x002c then if not(xC>=0X2d)then QW[XC[0x3]]={I({},1,XC[0X2])};else if xC~=0x00002E then if XC[5]==0X51 then hW=hW-1;lQ[hW]={[0X1]=3,[2]=(XC[0X2]-0X15),[0x3]=(XC[0x0003]-21)};elseif XC[0x5]==12 then hW=hW-0X1;lQ[hW]={[0X2]=(XC[2]-251),[3]=(XC[3]-251),[1]=23};elseif XC[0X5]==0X00EA then hW=hW-1;lQ[hW]={[0X2]=(XC[2]-118),[0X003]=(XC[3]-118),[0x00001]=47};else QW[XC[0X3]]=lW[eQ+0X00001];end;else(QW)[XC[3]]=QW[XC[0x2]]+XC[0X06];end;end;else do if not(xC>=42)then(QW)[XC[0X3]]=QW[XC[2]]<QW[XC[5]];else if xC~=0X02b then(QW)[XC[3]]=QW[XC[2]]*QW[XC[0x5]];else QW[XC[0X3]]=QW[XC[0X2]]<=QW[XC[5]];end;end;end;end;end;end;else if not(xC>=0X01d)then do if xC<0x001A then if not(xC<0x00018)then if xC==0X000019 then local gG,uG=XC[3],QW[XC[0x0002]];QW[gG+0X1]=uG;do QW[gG]=uG[XC[0X6]];end;else(QW)[XC[3]]=QW[XC[2]]-QW[XC[0X005]];end;else if XC[0x5]==169 then do hW=hW-0x01;end;(lQ)[hW]={[3]=(XC[0X3]-0X0000d8),[2]=(XC[2]-216),[0X1]=0x000B};elseif XC[5]==53 then do hW=hW-1;end;(lQ)[hW]={[0X1]=81,[0X00002]=(XC[0x2]-242),[0X3]=(XC[0X3]-242)};elseif XC[5]~=0X000b2 then repeat local Ub,xb=fQ,(QW);if#Ub>0X00000 then local fx=({});for Cs,ns in o,Ub do do for P_,U_ in o,ns do if U_[1]==xb and U_[2]>=0 then local fp=(U_[0x02]);if not(not fx[fp])then else(fx)[fp]={xb[fp]};end;(U_)[1]=fx[fp];(U_)[0x2]=1;end;end;end;end;end;until true;return;else hW=hW-1;(lQ)[hW]={[0X03]=(XC[3]-0Xd6),[0x002]=(XC[0X00002]-0XD6),[0X1]=69};end;end;else do if not(xC>=27)then if QW[XC[2]]==XC[0X6]then hW=XC[0X3];end;else do if xC~=28 then repeat local Jk,Zk=fQ,QW;if#Jk>0X0000 then local J4={};for V1,x1 in o,Jk do for I2,M2 in o,x1 do if not(M2[0X00001]==Zk and M2[0x2]>=0)then else local BS=(M2[2]);if not J4[BS]then do(J4)[BS]={Zk[BS]};end;end;do M2[0X1]=J4[BS];end;M2[2]=0X0001;end;end;end;end;until true;local oB=(XC[3]);return false,oB,oB+XC[2]-0x0002;else local Nr=(XC[0X00003]);local Jr,zr=QW[Nr]();if not(Jr)then else do QW[Nr+1]=zr;end;hW=XC[0X2];end;end;end;end;end;end;end;else if xC>=0X20 then if not(xC>=33)then local dH=(XC[3]);local cH=QW[dH+2];local hH,sH=QW[dH],(QW[dH+0X001]);QW[dH]=h(function()for ah=hH,sH,cH do(L)(true,ah);end;end);hW=XC[2];else if xC==0X022 then do QW[XC[0x3]]=-QW[XC[2]];end;else do hW=XC[2];end;end;end;else if xC<30 then local uy=(XC[0X0002]);QW[XC[0x003]]=QW[uy]..QW[uy+0X00001];else if xC~=0X1F then(QW[XC[0X3]])[XC[7]]=XC[0X006];else local Fp=(XC[3]);local Vp,Jp=XC[2],(XC[5]);do if Vp~=0x0 then eW=Fp+Vp-0x1;end;end;local Bp,zp=nil,(nil);if Vp~=0X1 then Bp,zp=ES(QW[Fp](I(QW,Fp+0X1,eW)));else Bp,zp=ES(QW[Fp]());end;if Jp==0X1 then do eW=Fp-0X1;end;else if Jp==0x0 then Bp=Bp+Fp-0X1;do eW=Bp;end;else Bp=Fp+Jp-2;eW=Bp+0x1;end;local yz=(0X0);for NT=Fp,Bp do do yz=yz+0x001;end;do QW[NT]=zp[yz];end;end;end;end;end;end;end;end;else if xC>=11 then do if not(xC>=17)then if not(xC>=0X000E)then if xC>=0XC then if xC==13 then do(QW)[XC[3]]=q(QW[XC[0X2]],QW[XC[5]]);end;else local qz=(OQ[XC[2]]);qz[1][qz[2]]=QW[XC[3]];end;else if XC[0x5]~=190 then QW[XC[3]]=QW[XC[2]];else hW=hW-1;lQ[hW]={[2]=(XC[2]-174),[3]=(XC[3]-174),[1]=18};end;end;else if xC>=15 then if xC~=0X10 then local Rj=QW[XC[2]]/QW[XC[5]];QW[XC[3]]=Rj-Rj%0x01;else if QW[XC[0X2]]<=QW[XC[5]]then do hW=XC[3];end;end;end;else(QW)[XC[0x3]]=QW[XC[0x2]]+QW[XC[5]];end;end;else if xC>=0X14 then if xC>=0X15 then if xC==22 then(QW)[XC[0X003]]=QW[XC[0x02]]/QW[XC[0X05]];else local Td=XC[3];QW[Td]=QW[Td](QW[Td+1]);eW=Td;end;else local gp,Rp=XC[3],(XC[0x0002]);do eW=gp+Rp-0x1;end;repeat local Ds,as=fQ,QW;if not(#Ds>0X0)then else local r9={};for og,Sg in o,Ds do for XZ,vZ in o,Sg do do if vZ[1]==as and vZ[2]>=0 then local c3=(vZ[2]);do if not(not r9[c3])then else r9[c3]={as[c3]};end;end;(vZ)[0X0001]=r9[c3];(vZ)[2]=1;end;end;end;end;end;until true;do return true,gp,Rp;end;end;else if xC<0X12 then(QW)[XC[0X3]]=QW[XC[2]]%QW[XC[0X05]];else if xC==19 then local id=((XC[0X005]-0x1)*0X000032);local hd=(XC[0X3]);local pd=(QW[hd]);for pp=0x01,eW-hd do(pd)[id+pp]=QW[hd+pp];end;else if XC[5]~=118 then local qm=(XC[3]);local zm=(BW-eQ);do if not(zm<0)then else zm=-1;end;end;do for C2=qm,qm+zm do QW[C2]=lW[eQ+(C2-qm)+0X1];end;end;do eW=qm+zm;end;else hW=hW-0X0001;(lQ)[hW]={[1]=0X3,[2]=(XC[0X0002]-0X0a7),[0X003]=(XC[0X3]-167)};end;end;end;end;end;end;else do if xC<0X5 then do if not(xC>=2)then if xC==0x1 then local Xr=XC[0X3];local Yr=h(function(...)L();do for si in...do(L)(true,si);end;end;end);(Yr)(QW[Xr],QW[Xr+0X1],QW[Xr+0X00002]);do eW=Xr;end;do QW[Xr]=Yr;end;do hW=XC[0X2];end;else local dw=OQ[XC[2]];(QW)[XC[0X3]]=dw[0x001][dw[0X0002]];end;else if not(xC<0X3)then if xC~=0X4 then repeat local t0,y0=fQ,QW;if not(#t0>0)then else local y8=({});for HA,EA in o,t0 do for m7,k7 in o,EA do if not(k7[1]==y0 and k7[0X2]>=0X0)then else local xf=k7[0x2];do if not y8[xf]then(y8)[xf]={y0[xf]};end;end;do(k7)[1]=y8[xf];end;k7[2]=1;end;end;end;end;until true;local mu=(XC[0X3]);return false,mu,mu;else do repeat local II,uI,rI=fQ,QW,XC[3];if#II>0 then local Hd=({});for eS,BS in o,II do for aH,CH in o,BS do if not(CH[1]==uI and CH[0X2]>=rI)then else local t1=CH[2];do if not Hd[t1]then do Hd[t1]={uI[t1]};end;end;end;(CH)[0X1]=Hd[t1];do(CH)[2]=0X1;end;end;end;end;end;until true;end;end;else(QW)[XC[3]]=S(QW[XC[0x2]],QW[XC[0X5]]);end;end;end;else if not(xC<0X8)then if xC>=9 then if xC~=10 then repeat local gW,FW=fQ,QW;do if#gW>0 then local Db={};for Zg,vg in o,gW do for vi,hi in o,vg do do if hi[0x0001]==FW and hi[0x02]>=0X0 then local w0=(hi[0X2]);if not(not Db[w0])then else Db[w0]={FW[w0]};end;do(hi)[1]=Db[w0];end;hi[2]=0X001;end;end;end;end;end;end;until true;return true,XC[3],0X00000;else local WP=(XC[5]-1)*50;local IP=(XC[3]);local lP=QW[IP];do for lJ=1,XC[0X2]do lP[WP+lJ]=QW[IP+lJ];end;end;end;else(QW)[XC[3]]=QW[XC[0X2]]>QW[XC[0X5]];end;else do if xC<0X6 then do repeat local lR,RR=fQ,QW;if#lR>0 then local Qb=({});for Ks,Fs in o,lR do do for n2,M2 in o,Fs do if not(M2[1]==RR and M2[2]>=0X00000)then else local Gz=M2[0X2];if not Qb[Gz]then Qb[Gz]={RR[Gz]};end;M2[1]=Qb[Gz];M2[2]=0X1;end;end;end;end;end;until true;end;return true,XC[3],0X1;else do if xC~=7 then if not QW[XC[0X3]]then hW=XC[0x002];end;else local Jv=(XC[3]);QW[Jv](I(QW,Jv+1,eW));eW=Jv-1;end;end;end;end;end;end;end;end;end;end;end;end;end);do if RW then if DW then if NW==1 then do return QW[EW]();end;else do return QW[EW](I(QW,EW+1,eW));end;end;elseif EW then return I(QW,EW,NW);end;else if P(DW)~="string"then V(DW,0X0);else do if g(DW,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if g(DW,"^.-:%d+: ")then V('\076\117\114a\112h\032\083\099ript:'..(tQ[hW-0X1]or"(internal)")..": "..v(DW),0);else V(DW,0X0);end;end;end;end;end;if not(a)then else(a)(CQ,IQ);end;return CQ;end;do TS=0x8;end;end;end;else if TS~=0 then uS=function(uM)local OM,dM=nil,(nil);local HM=(0X01);do while(true)do do if HM~=0X00000 then do OM={z(l,F,F+0X3)};end;do HM=0x0;end;else dM=q(OM[oS],fS);do break;end;end;end;end;end;local oM=q(OM[0X0002],fS);local JM=(q(OM[0X3],fS));local AM=(q(OM[4],fS));do HM=0X2;end;while(true)do if not(HM<=0)then if HM==1 then return AM*0X001000000+JM*0X10000+oM*0X000100+dM;else fS=(81*fS+uM)%0x100;HM=0;end;else F=F+4;do HM=1;end;end;end;end;TS=0X00007;else WS=function(IF)local DF=x();local gF="";for wP=0x1,DF,7997 do local QP=(wP+7997-oS);if not(QP>DF)then else QP=DF;end;local FP,EP=0X0000,nil;do repeat if not(FP<=0x00)then if FP~=0x001 then for T8=0X1,#EP do local F8=(0X1);while F8~=2 do do if F8==0 then do B=(IF*B+jS)%256;end;F8=0X0002;else(EP)[T8]=q(EP[T8],B);F8=0;end;end;end;end;FP=0X1;else gF=gF..N(I(EP));break;end;else EP={z(l,F+wP-1,F+QP-1)};FP=0X2;end;until(false);end;end;local hF=0;do repeat if hF==0X00000 then F=F+DF;do hF=0x1;end;else do return gF;end;end;until(false);end;end;TS=0X9;end;end;end;else if not(TS<=0X7)then do if TS<=8 then function zS()local rL=(2);local LL,QL,GL=nil,nil,nil;while rL~=4 do do if rL<=1 then if rL==0x0 then LL={{},MS,{},MS,{},MS,nil,MS,MS};rL=1;else do QL={};end;do rL=3;end;end;else do if rL==2 then rL=0;else GL=LL[3];do rL=0X4;end;end;end;end;end;end;local mL=({});local UL=x()-0X14a9F;local jL,VL=nil,nil;do for bF=0X0,0X02 do if not(bF<=0)then do if bF==1 then jL=x()-50576;else VL={};end;end;else do for ny=0,UL-0X0001 do(GL)[ny]=zS();end;end;end;end;end;local xL=LL[oS];for zT=oS,jL do(xL)[zT]={[0X4]=p(),[2]=e(),[0X1]=T(),[0X7]=p(),[3]=e(),[0X00006]=p(),[gS]=e()};end;local JL=(1);local HL=(p());do LL[9]=M(HL,0x1,1)~=0;end;for Wm=0X0,0x1 do if Wm~=0x0 then do(LL)[0X007]=T();end;else LL[0X8]=M(HL,2,1)~=US;end;end;local qL=x();for bE=1,qL do local CE,JE,hE=nil,nil,(nil);for hj=0,0x003 do do if hj<=1 then if hj==0 then CE=x();else JE=x();end;else if hj==2 then do hE=x();end;else for yJ=CE,JE do LL[5][yJ]=hE;end;end;end;end;end;end;local RL=x()-tS;rL=0X2;local NL,vL=nil,(nil);while rL~=0X3 do if rL<=0X0 then for kT=1,RL do local gT,sT,YT=nil,nil,(nil);local hT=(0);repeat do if hT<=1 then if hT~=0X0 then if gT==0xD7 then sT=b();elseif gT==96 then sT=R();elseif gT==70 then do sT=X(WS(NL),R()+x());end;elseif gT==54 then sT=R();elseif gT==0X1d then sT=X(WS(NL),0X6);elseif gT==0X0000d8 then sT=b();elseif gT==115 then sT=CS;elseif gT==0x64 then sT=OS;elseif gT==0Xba then sT=b();end;hT=4;else gT=p();hT=0x2;end;else if hT<=0X02 then sT=MS;hT=0X00003;else do if hT~=0x3 then YT={sT,{}};hT=5;else(mL)[kT-1]=JL;do hT=0X1;end;end;end;end;end;end;until hT==0x05;hT=0X1;repeat do if hT<=0x00000 then JL=JL+1;hT=0X2;else do if hT==0x00001 then do QL[JL]=YT;end;do hT=0X0;end;else if not(vL)then else local BE=1;while(true)do if BE~=0X0 then PS[vS]=YT;BE=0X0000;else do vS=vS+1;end;do break;end;end;end;end;hT=3;end;end;end;end;until hT>0X2;end;rL=3;else if rL==0x0001 then do vL=p()~=0X0;end;do rL=0;end;else NL=p();rL=1;end;end;end;(LL)[0x10]=x();do(LL)[0xF]=p();end;rL=0;do while rL~=0X3 do do if not(rL<=0X0)then if rL~=0X01 then do for wh=1,jL do local ch=(LL[0X0001][wh]);for Lh,jh in ipairs(C)do local Nh,Rh,gh=1,nil,(nil);while Nh~=0X2 do if Nh==0 then gh=ch[Rh];Nh=0x2;else Rh=O[jh];Nh=0X0;end;end;if gh==LS then local Yi,Di,Ai=mL[ch[jh]],0,nil;do while(true)do do if Di==0 then do Ai=QL[Yi];end;Di=1;else if not(Ai)then else local iU=nil;for QG=0X00000,1 do if QG~=0 then iU=Ai[2];else(ch)[Rh]=Ai[0X0001];end;end;(iU)[#iU+1]={ch,Rh};end;do break;end;end;end;end;end;elseif gh==2 then ch[jh]=wh+ch[jh]+1;end;end;end;end;rL=0x1;else do LL[18]=p();end;rL=0x003;end;else(LL)[0x6]=T();rL=2;end;end;end;end;rL=0X0;do repeat if rL~=0X0 then(LL)[19]=x();break;else(LL)[0xA]=x();rL=1;end;until(false);end;(LL)[0x2]=T();do(LL)[17]=x();end;LL[0X4]=VL;for At=1,T()do(VL)[At]={p(),T()};end;return LL;end;do TS=0X00005;end;else if TS~=0X9 then do return XS(NS,K,nil)(...);end;else TS=0X4;end;end;end;else if TS<=5 then do NS=zS();end;TS=0X2;else do if TS==6 then do PS=MS;end;TS=10;else ES=function(...)return u("\035",...),{...};end;do TS=0X3;end;end;end;end;end;end;end;end)(true,55,table,0XF,setmetatable,setfenv,0X9,31,pcall,getfenv,coroutine.wrap,11,5,string.byte,0x00006,rawget,2,4,0X0,'bx\111\114',select,false,0X03ff,3,"\098n\111\116",12,string.match,_ENV,20,0x000Dce1,nil,'\108s\104\105\102\116',type,string.rep,string,next,1,0X00007,13,...);
